import { motion, AnimatePresence } from "framer-motion";
import {
  Link,
  NavLink,
  useLocation,
  useRouteLoaderData,
} from "react-router-dom";
import { Twirl as Hamburger } from "hamburger-react";
import genClasses from "./Navigation.module.css";
import classes from "./MainNavigation.module.css";
import { useContext, useState, useEffect, useRef } from "react";
import LogoImage from "../../components/UI/Logo/Logo";
import SideMenu from "../Menu/SideMenu";
import { ThemeContext } from "../../context/ThemeContext";
import UserMenu from "../Menu/UserMenu";
import BottomNavigation from "./BottomNavigation";
import Navigation from "./NavigationWrapper";
import NavigationWrapper from "./NavigationWrapper";
import Popup from "../UI/SettingsPopup/Popup";

const MainNavigation = ({ user }) => {
  const [isOpen, setIsOpen] = useState(false);
  const { theme } = useContext(ThemeContext);

  return (
    <>
      <NavigationWrapper>
        <div className={`${genClasses["left"]}`}>
          <LogoImage name />
        </div>
        <div className={`${genClasses["right"]}`}>
          {/* <span className={classes["icon"]}>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 68 85"
              version="1.1"
              x="0px"
              y="0px"
            >
              <title>
                dashboard, data, live, information, business, numbers
              </title>
              <g stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
                <g
                  transform="translate(-416.000000, -776.000000)"
                  fill="#000000"
                  fillRule="nonzero"
                >
                  <path d="M422,776 L478,776 C481.313708,776 484,778.686292 484,782 L484,802 C484,805.313708 481.313708,808 478,808 L422,808 C418.686292,808 416,805.313708 416,802 L416,782 C416,778.686292 418.686292,776 422,776 Z M422,780 C420.895431,780 420,780.895431 420,782 L420,802 C420,803.104569 420.895431,804 422,804 L478,804 C479.104569,804 480,803.104569 480,802 L480,782 C480,780.895431 479.104569,780 478,780 L422,780 Z M422,812 L442,812 C445.313708,812 448,814.686292 448,818 L448,838 C448,841.313708 445.313708,844 442,844 L422,844 C418.686292,844 416,841.313708 416,838 L416,818 C416,814.686292 418.686292,812 422,812 Z M422,816 C420.895431,816 420,816.895431 420,818 L420,838 C420,839.104569 420.895431,840 422,840 L442,840 C443.104569,840 444,839.104569 444,838 L444,818 C444,816.895431 443.104569,816 442,816 L422,816 Z M458,812 L478,812 C481.313708,812 484,814.686292 484,818 L484,838 C484,841.313708 481.313708,844 478,844 L458,844 C454.686292,844 452,841.313708 452,838 L452,818 C452,814.686292 454.686292,812 458,812 Z M458,816 C456.895431,816 456,816.895431 456,818 L456,838 C456,839.104569 456.895431,840 458,840 L478,840 C479.104569,840 480,839.104569 480,838 L480,818 C480,816.895431 479.104569,816 478,816 L458,816 Z M437,828 C437,826.895431 437.895431,826 439,826 C440.104569,826 441,826.895431 441,828 C441,832.970563 436.970563,837 432,837 C427.029437,837 423,832.970563 423,828 C423,823.029437 427.029437,819 432,819 C433.104569,819 434,819.895431 434,821 C434,822.104569 433.104569,823 432,823 C429.238576,823 427,825.238576 427,828 C427,830.761424 429.238576,833 432,833 C434.761424,833 437,830.761424 437,828 Z M462.2,828.6 C461.316344,829.262742 460.062742,829.083656 459.4,828.2 C458.737258,827.316344 458.916344,826.062742 459.8,825.4 L463.8,822.4 C464.406035,821.945474 465.216859,821.872362 465.894427,822.211146 L468.724489,823.626176 L473.719631,819.463557 C474.568185,818.756429 475.829314,818.871077 476.536443,819.719631 C477.243571,820.568185 477.128923,821.829314 476.280369,822.536443 L470.280369,827.536443 C469.669943,828.04513 468.816281,828.144208 468.105573,827.788854 L465.211146,826.341641 L462.2,828.6 Z M464,836 C462.895431,836 462,835.104569 462,834 C462,832.895431 462.895431,832 464,832 L472,832 C473.104569,832 474,832.895431 474,834 C474,835.104569 473.104569,836 472,836 L464,836 Z M425.702247,800.872658 C424.668006,801.260499 423.515182,800.736488 423.127342,799.702247 C422.739501,798.668006 423.263512,797.515182 424.297753,797.127342 L432.297753,794.127342 C432.63602,794.000492 433.002329,793.967634 433.357771,794.03226 L443.742084,795.920317 L454.172394,791.179267 C454.597167,790.986188 455.07608,790.947703 455.526235,791.070472 L465.561471,793.807355 L473.772119,787.421296 C474.644013,786.743155 475.900564,786.900224 476.578704,787.772119 C477.256845,788.644013 477.099776,789.900564 476.227881,790.578704 L467.227881,797.578704 C466.730972,797.965189 466.081098,798.095164 465.473765,797.929528 L455.170323,795.119498 L444.827606,799.820733 C444.456679,799.989336 444.043105,800.040626 443.642229,799.96774 L433.18536,798.066491 L425.702247,800.872658 Z M436,789 C434.895431,789 434,788.104569 434,787 C434,785.895431 434.895431,785 436,785 L446,785 C447.104569,785 448,785.895431 448,787 C448,788.104569 447.104569,789 446,789 L436,789 Z M427,790 C425.343146,790 424,788.656854 424,787 C424,785.343146 425.343146,784 427,784 C428.656854,784 430,785.343146 430,787 C430,788.656854 428.656854,790 427,790 Z" />
                </g>
              </g>
            </svg>
          </span> */}
          <span className={classes["icon"]}>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 76 87"
              version="1.1"
              width="36px"
              height="30px"
            >
              <title>Dashboard</title>
              <g stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
                <g
                  transform="translate(-413.000000, -757.000000)"
                  fill="var(--text-2)"
                  fillRule="nonzero"
                >
                  <path d="M422,776 L478,776 C481.313708,776 484,778.686292 484,782 L484,802 C484,805.313708 481.313708,808 478,808 L422,808 C418.686292,808 416,805.313708 416,802 L416,782 C416,778.686292 418.686292,776 422,776 Z M422,780 C420.895431,780 420,780.895431 420,782 L420,802 C420,803.104569 420.895431,804 422,804 L478,804 C479.104569,804 480,803.104569 480,802 L480,782 C480,780.895431 479.104569,780 478,780 L422,780 Z M422,812 L442,812 C445.313708,812 448,814.686292 448,818 L448,838 C448,841.313708 445.313708,844 442,844 L422,844 C418.686292,844 416,841.313708 416,838 L416,818 C416,814.686292 418.686292,812 422,812 Z M422,816 C420.895431,816 420,816.895431 420,818 L420,838 C420,839.104569 420.895431,840 422,840 L442,840 C443.104569,840 444,839.104569 444,838 L444,818 C444,816.895431 443.104569,816 442,816 L422,816 Z M458,812 L478,812 C481.313708,812 484,814.686292 484,818 L484,838 C484,841.313708 481.313708,844 478,844 L458,844 C454.686292,844 452,841.313708 452,838 L452,818 C452,814.686292 454.686292,812 458,812 Z M458,816 C456.895431,816 456,816.895431 456,818 L456,838 C456,839.104569 456.895431,840 458,840 L478,840 C479.104569,840 480,839.104569 480,838 L480,818 C480,816.895431 479.104569,816 478,816 L458,816 Z M437,828 C437,826.895431 437.895431,826 439,826 C440.104569,826 441,826.895431 441,828 C441,832.970563 436.970563,837 432,837 C427.029437,837 423,832.970563 423,828 C423,823.029437 427.029437,819 432,819 C433.104569,819 434,819.895431 434,821 C434,822.104569 433.104569,823 432,823 C429.238576,823 427,825.238576 427,828 C427,830.761424 429.238576,833 432,833 C434.761424,833 437,830.761424 437,828 Z M462.2,828.6 C461.316344,829.262742 460.062742,829.083656 459.4,828.2 C458.737258,827.316344 458.916344,826.062742 459.8,825.4 L463.8,822.4 C464.406035,821.945474 465.216859,821.872362 465.894427,822.211146 L468.724489,823.626176 L473.719631,819.463557 C474.568185,818.756429 475.829314,818.871077 476.536443,819.719631 C477.243571,820.568185 477.128923,821.829314 476.280369,822.536443 L470.280369,827.536443 C469.669943,828.04513 468.816281,828.144208 468.105573,827.788854 L465.211146,826.341641 L462.2,828.6 Z M464,836 C462.895431,836 462,835.104569 462,834 C462,832.895431 462.895431,832 464,832 L472,832 C473.104569,832 474,832.895431 474,834 C474,835.104569 473.104569,836 472,836 L464,836 Z M425.702247,800.872658 C424.668006,801.260499 423.515182,800.736488 423.127342,799.702247 C422.739501,798.668006 423.263512,797.515182 424.297753,797.127342 L432.297753,794.127342 C432.63602,794.000492 433.002329,793.967634 433.357771,794.03226 L443.742084,795.920317 L454.172394,791.179267 C454.597167,790.986188 455.07608,790.947703 455.526235,791.070472 L465.561471,793.807355 L473.772119,787.421296 C474.644013,786.743155 475.900564,786.900224 476.578704,787.772119 C477.256845,788.644013 477.099776,789.900564 476.227881,790.578704 L467.227881,797.578704 C466.730972,797.965189 466.081098,798.095164 465.473765,797.929528 L455.170323,795.119498 L444.827606,799.820733 C444.456679,799.989336 444.043105,800.040626 443.642229,799.96774 L433.18536,798.066491 L425.702247,800.872658 Z M436,789 C434.895431,789 434,788.104569 434,787 C434,785.895431 434.895431,785 436,785 L446,785 C447.104569,785 448,785.895431 448,787 C448,788.104569 447.104569,789 446,789 L436,789 Z M427,790 C425.343146,790 424,788.656854 424,787 C424,785.343146 425.343146,784 427,784 C428.656854,784 430,785.343146 430,787 C430,788.656854 428.656854,790 427,790 Z" />
                </g>
              </g>
            </svg>
          </span>
          <UserMenu user={user} />
        </div>

        {/* <>
        <div className={`${classes["top"]} ${classes.second}`}>
          <span className={classes["logoImage"]}></span>
          <span className={classes["pageName"]}>{pageName}</span>
        </div>
        <div
          className={`${
            goingDown
              ? classes["fade-in-bottom-one"]
              : classes["fade-in-top-one"]
          } ${classes["top"]}`}
        >
          <span className={classes["mobile"]}>
            <button style={{}}>
              {currentUserDetails && window.innerWidth > 767 ? (
                <img src={currentUserDetails.photoUrl} alt="" />
              ) : (
                currentUserDetails && (
                  <Hamburger
                    size={15}
                    distance="sm"
                    rounded
                    hideOutline={false}
                    toggled={isOpen}
                    color={isOpen ? "var(--brand)" : "var(--text-1)"}
                    toggle={() => setIsOpen((isOpen) => !isOpen)}
                  />
                )
              )}
            </button>
          </span>
          <span className={`${classes["mobile"]} ${classes.image}`}>
            <LogoImage />
          </span>
          <span className={`${classes["mobile"]} ${classes.user}`}>
            <UserMenu />
          </span>
          <span className={classes["tablet"]}>
            <span className={`${classes["logo"]}`}>
              <span className={classes["image"]}>
                <LogoImage />
              </span>
              <p className={`${classes.text}`}>TrendBook</p>
            </span>
            <span className={`${classes.user}`}>
              <UserMenu />
            </span>
          </span>
        </div>
      </> */}
        <AnimatePresence>
          {(isOpen || window.innerWidth > 767) && (
            <SideMenu isOpen={isOpen} setIsOpen={setIsOpen} user={user} />
          )}
        </AnimatePresence>
      </NavigationWrapper>
      <Popup />
      <BottomNavigation user={user} />
    </>
  );
};

export default MainNavigation;
